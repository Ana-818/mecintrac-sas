---
import Layout from "@/layouts/Layout.astro"
import projects from "@/data/projects.json"
import { Image } from "astro:assets"
const projectImage = import.meta.glob('/src/assets/images/projects/*.{jpg,png,jpeg,webp}', { eager: true }) as Record<string, { default: string }>;

// Generar un conjunto único de etiquetas
const uniqueTags = Array.from(new Set(projects.map(project => project.tag)));
---

<Layout title="Proyectos">
  <div class="flex flex-col items-center section-container">
    <h1 class="text-5xl font-bold tracking-wider text-blue text-center">Proyectos</h1>
    <p class="text-lg text-center max-w-2xl mt-2">En Mecintrac, desarrollamos proyectos en diversas industrias, destacando nuestro compromiso con la calidad y la eficiencia en cada solución entregada.</p>
    
    <div class="flex flex-wrap justify-center max-w-2xl mt-4">
      <a href="?tag=Todas" class="tag-link m-2 px-4 py-2 text-blue border-blue border-2 rounded-full">Todas</a>
      {uniqueTags.map(tag => (
        <a href={`?tag=${tag}`} class="tag-link m-2 px-4 py-2 text-blue border-blue border-2 rounded-full">{tag}</a>
      ))}
    </div>

    <div id="projects-container" class="flex flex-wrap justify-center mt-8 max-w-5xl">
      {projects.map((project, index) => (
        <div class="project-item m-4 flex flex-col items-start" data-index={index}>
          <Image 
            src={projectImage[project.image].default} 
            alt={project.tag} 
            width={400}
            inferSize
            loading="lazy"
            class="max-w-[300px] max-h-[300px] object-cover rounded-lg" 
          />
          <span class="m-2 px-4 py-2 text-blue border-blue border-2 rounded-full select-none">{project.tag}</span>
        </div>
      ))}
    </div>

    <!-- Controles de paginación -->
    <div class="flex justify-center mt-4">
      <button id="prev-btn" class="flex items-center justify-center w-10 h-10 border rounded bg-blue text-white m-2">&lt;</button>
      <span id="page-indicator" class="flex items-center justify-center m-2 text-lg text-blue"></span>
      <button id="next-btn" class="flex items-center justify-center w-10 h-10 border rounded bg-blue text-white m-2">&gt;</button>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const projectsPerPage = 6;
      let currentPage = 1;
      let currentTag = 'Todas';

      function updateProjectsVisibility() {
        const projects = document.querySelectorAll('.project-item');
        let visibleCount = 0;
        projects.forEach((project, index) => {
          const projectTag = project.querySelector('span')?.textContent ?? '';
          const matchesTag = currentTag === 'Todas' || projectTag === currentTag;
          const isVisible = matchesTag && visibleCount >= (currentPage - 1) * projectsPerPage && visibleCount < currentPage * projectsPerPage;
          if (matchesTag) visibleCount++;
          (project as HTMLElement).style.display = isVisible ? '' : 'none';
        });
      }

      function updatePaginationControls() {
        const prevBtn = document.getElementById('prev-btn') as HTMLButtonElement;
        const nextBtn = document.getElementById('next-btn') as HTMLButtonElement;
        const pageIndicator = document.getElementById('page-indicator') as HTMLSpanElement;
        const projects = document.querySelectorAll('.project-item');
        const totalProjects = Array.from(projects).filter(project => {
          const projectTag = project.querySelector('span')?.textContent ?? '';
          return currentTag === 'Todas' || projectTag === currentTag;
        }).length;
        const totalPages = Math.ceil(totalProjects / projectsPerPage);

        if (prevBtn && nextBtn) {
          prevBtn.disabled = currentPage === 1;
          nextBtn.disabled = currentPage === totalPages;

          if (prevBtn.disabled) {
            prevBtn.classList.add('bg-light-blue');
          } else {
            prevBtn.classList.remove('bg-light-blue');
          }

          if (nextBtn.disabled) {
            nextBtn.classList.add('bg-light-blue');
          } else {
            nextBtn.classList.remove('bg-light-blue');
          }
        }

        if (pageIndicator) {
          pageIndicator.textContent = `Página ${currentPage} de ${totalPages}`;
        }
      }

      function setTag(tag: string) {
        currentTag = tag;
        currentPage = 1;
        updateProjectsVisibility();
        updatePaginationControls();
        updateTagStyles();
      }

      function updateTagStyles() {
        document.querySelectorAll('.tag-link').forEach(link => {
          if (link.textContent === currentTag) {
            link.classList.add('bg-blue', 'text-white');
          } else {
            link.classList.remove('bg-blue', 'text-white');
          }
        });
      }

      document.querySelectorAll('.tag-link').forEach(link => {
        link.addEventListener('click', (event) => {
          event.preventDefault();
          setTag(link.textContent || '');
        });
      });

      const prevBtn = document.getElementById('prev-btn');
      if (prevBtn) {
        prevBtn.addEventListener('click', () => {
          if (currentPage > 1) {
            currentPage--;
            updateProjectsVisibility();
            updatePaginationControls();
          }
        });
      }

      const nextBtn = document.getElementById('next-btn');
      if (nextBtn) {
        nextBtn.addEventListener('click', () => {
          const projects = document.querySelectorAll('.project-item');
          const totalProjects = Array.from(projects).filter(project => {
            const projectTag = project.querySelector('span')?.textContent ?? '';
            return currentTag === 'Todas' || projectTag === currentTag;
          }).length;
          const totalPages = Math.ceil(totalProjects / projectsPerPage);
          if (currentPage < totalPages) {
            currentPage++;
            updateProjectsVisibility();
            updatePaginationControls();
          }
        });
      }

      updateProjectsVisibility();
      updatePaginationControls();
      updateTagStyles();
    });
  </script>
</Layout>